version: '3.6'
services:
  zoo:
    container_name: zookeeper
    image: zookeeper:3.6.2
    restart: always
    ports:
      - '2181:2181'
    volumes:
      - '../../tempdata/zoo/data:/data'
      - '../../tempdata/zoo/datalog:/datalog'
    environment:
      TZ: 'Asia/Shanghai'
      ZOO_4LW_COMMANDS_WHITELIST: '*'
  kfk:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.7.0
    restart: always
    depends_on: [ zoo ]
    ports:
      - '9092:9092'
    volumes:
      - '../../tempdata/kfk/:/kafka'
      - '/var/run/docker.sock:/var/run/docker.sock'
    environment:
      TZ: 'Asia/Shanghai'
      # 本机在局域网(内部访问)或外网IP(外网访问)
      KAFKA_ADVERTISED_HOST_NAME: 10.1.68.177
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.1.68.177:9092
      KAFKA_HOST_NAME: 0.0.0.0
      KAFKA_PORT: 9092
      # PLAINTEXT://:9092 等同于 PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_CREATE_TOPICS: 'aiman:1:1'
  kfdp:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:3.27.0
    restart: always
    depends_on: [ kfk ]
    ports:
      - '9000:9000'
    environment:
      TZ: 'Asia/Shanghai'
      KAFKA_BROKERCONNECT: kfk:9092
      SERVER_SERVLET_CONTEXTPATH: '/kafka'